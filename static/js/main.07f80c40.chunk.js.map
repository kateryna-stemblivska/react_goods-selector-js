{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","selectedGood","setselectedGood","className","onClick","type","map","good","isSelected","cn","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,uBAAMC,UAAU,oBAAhB,UACGF,EACC,qBAAIE,UAAU,sCAAd,oBACMF,EADN,gBAGE,wBACEG,QAAS,kBAAMF,EAAgB,KAC/B,UAAQ,cACRG,KAAK,SACLF,UAAU,cACV,aAAW,aAIf,oBAAIA,UAAU,QAAd,+BAGF,uBAAOA,UAAU,QAAjB,SACE,gCACGL,EAAMQ,KAAI,SAACC,GACV,IAAMC,EAAcD,IAASN,EAQ7B,OACE,qBAEE,UAAQ,OACRE,UAAWM,IAAG,GAAI,CAChB,+BAAgCD,IAJpC,UAOE,6BACE,wBACEJ,QAhBR,WACE,OAEIF,EAFIM,EAEY,GADAD,IAed,UAASC,EAAa,eAAiB,YACvCH,KAAK,SACLF,UAAWM,IAAG,SAAU,CACtB,UAAWD,IALf,SASGA,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,MArBEA,cClDrBG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.07f80c40.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setselectedGood] = useState('Jam');\n\n  return (\n    <main className=\"section container\">\n      {selectedGood ? (\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood} is selected`}\n\n          <button\n            onClick={() => setselectedGood('')}\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            aria-label=\"Clear\"\n          />\n        </h1>\n      ) : (\n        <h1 className=\"title\">No goods selected</h1>\n      )}\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((good) => {\n            const isSelected = (good === selectedGood);\n\n            function changeSelectedGood() {\n              return !isSelected\n                ? setselectedGood(good)\n                : setselectedGood('');\n            }\n\n            return (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={cn('', {\n                  'has-background-success-light': isSelected,\n                })}\n              >\n                <td>\n                  <button\n                    onClick={(changeSelectedGood)}\n                    data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n                    type=\"button\"\n                    className={cn('button', {\n                      'is-info': isSelected,\n                    })}\n                  >\n\n                    {isSelected ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}